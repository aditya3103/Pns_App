package com.example.pns;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.TextView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;

public class tdistri extends AppCompatActivity {

    String jsonStr = "    {\n" +
            "        \"Sheet1\": [\n" +
            "            {\n" +
            "                \"v\": \"1\",\n" +
            "                \"0.1\": \"3.078\",\n" +
            "                \"0.05\": \"6.314\",\n" +
            "                \"0.025\": \"12.706\",\n" +
            "                \"0.01\": \"31.821\",\n" +
            "                \"0.005\": \"63.657\",\n" +
            "                \"0.001\": \"318.31\",\n" +
            "                \"0.0005\": \"636.62\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"2\",\n" +
            "                \"0.1\": \"1.886\",\n" +
            "                \"0.05\": \"2.92\",\n" +
            "                \"0.025\": \"4.303\",\n" +
            "                \"0.01\": \"6.965\",\n" +
            "                \"0.005\": \"9.925\",\n" +
            "                \"0.001\": \"22.326\",\n" +
            "                \"0.0005\": \"31.598\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"3\",\n" +
            "                \"0.1\": \"1.638\",\n" +
            "                \"0.05\": \"2.353\",\n" +
            "                \"0.025\": \"3.182\",\n" +
            "                \"0.01\": \"4.541\",\n" +
            "                \"0.005\": \"5.841\",\n" +
            "                \"0.001\": \"10.213\",\n" +
            "                \"0.0005\": \"12.924\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"4\",\n" +
            "                \"0.1\": \"1.533\",\n" +
            "                \"0.05\": \"2.132\",\n" +
            "                \"0.025\": \"2.776\",\n" +
            "                \"0.01\": \"3.747\",\n" +
            "                \"0.005\": \"4.604\",\n" +
            "                \"0.001\": \"7.173\",\n" +
            "                \"0.0005\": \"8.61\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"5\",\n" +
            "                \"0.1\": \"1.476\",\n" +
            "                \"0.05\": \"2.015\",\n" +
            "                \"0.025\": \"2.571\",\n" +
            "                \"0.01\": \"3.365\",\n" +
            "                \"0.005\": \"4.032\",\n" +
            "                \"0.001\": \"5.893\",\n" +
            "                \"0.0005\": \"6.869\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"6\",\n" +
            "                \"0.1\": \"1.44\",\n" +
            "                \"0.05\": \"1.943\",\n" +
            "                \"0.025\": \"2.447\",\n" +
            "                \"0.01\": \"3.143\",\n" +
            "                \"0.005\": \"3.707\",\n" +
            "                \"0.001\": \"5.208\",\n" +
            "                \"0.0005\": \"5.959\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"7\",\n" +
            "                \"0.1\": \"1.415\",\n" +
            "                \"0.05\": \"1.895\",\n" +
            "                \"0.025\": \"2.365\",\n" +
            "                \"0.01\": \"2.998\",\n" +
            "                \"0.005\": \"3.499\",\n" +
            "                \"0.001\": \"4.785\",\n" +
            "                \"0.0005\": \"5.408\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"8\",\n" +
            "                \"0.1\": \"1.397\",\n" +
            "                \"0.05\": \"1.86\",\n" +
            "                \"0.025\": \"2.306\",\n" +
            "                \"0.01\": \"2.896\",\n" +
            "                \"0.005\": \"3.355\",\n" +
            "                \"0.001\": \"4.501\",\n" +
            "                \"0.0005\": \"5.041\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"9\",\n" +
            "                \"0.1\": \"1.383\",\n" +
            "                \"0.05\": \"1.833\",\n" +
            "                \"0.025\": \"2.262\",\n" +
            "                \"0.01\": \"2.821\",\n" +
            "                \"0.005\": \"3.25\",\n" +
            "                \"0.001\": \"4.297\",\n" +
            "                \"0.0005\": \"4.781\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"10\",\n" +
            "                \"0.1\": \"1.372\",\n" +
            "                \"0.05\": \"1.812\",\n" +
            "                \"0.025\": \"2.228\",\n" +
            "                \"0.01\": \"2.764\",\n" +
            "                \"0.005\": \"3.169\",\n" +
            "                \"0.001\": \"4.144\",\n" +
            "                \"0.0005\": \"4.587\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"11\",\n" +
            "                \"0.1\": \"1.363\",\n" +
            "                \"0.05\": \"1.796\",\n" +
            "                \"0.025\": \"2.201\",\n" +
            "                \"0.01\": \"2.718\",\n" +
            "                \"0.005\": \"3.106\",\n" +
            "                \"0.001\": \"4.025\",\n" +
            "                \"0.0005\": \"4.437\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"12\",\n" +
            "                \"0.1\": \"1.356\",\n" +
            "                \"0.05\": \"1.782\",\n" +
            "                \"0.025\": \"2.179\",\n" +
            "                \"0.01\": \"2.681\",\n" +
            "                \"0.005\": \"3.055\",\n" +
            "                \"0.001\": \"3.93\",\n" +
            "                \"0.0005\": \"4.318\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"13\",\n" +
            "                \"0.1\": \"1.35\",\n" +
            "                \"0.05\": \"1.771\",\n" +
            "                \"0.025\": \"2.16\",\n" +
            "                \"0.01\": \"2.65\",\n" +
            "                \"0.005\": \"3.012\",\n" +
            "                \"0.001\": \"3.852\",\n" +
            "                \"0.0005\": \"4.221\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"14\",\n" +
            "                \"0.1\": \"1.345\",\n" +
            "                \"0.05\": \"1.761\",\n" +
            "                \"0.025\": \"2.145\",\n" +
            "                \"0.01\": \"2.624\",\n" +
            "                \"0.005\": \"2.977\",\n" +
            "                \"0.001\": \"3.787\",\n" +
            "                \"0.0005\": \"4.14\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"15\",\n" +
            "                \"0.1\": \"1.341\",\n" +
            "                \"0.05\": \"1.753\",\n" +
            "                \"0.025\": \"2.131\",\n" +
            "                \"0.01\": \"2.602\",\n" +
            "                \"0.005\": \"2.947\",\n" +
            "                \"0.001\": \"3.733\",\n" +
            "                \"0.0005\": \"4.073\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"16\",\n" +
            "                \"0.1\": \"1.337\",\n" +
            "                \"0.05\": \"1.746\",\n" +
            "                \"0.025\": \"2.12\",\n" +
            "                \"0.01\": \"2.583\",\n" +
            "                \"0.005\": \"2.921\",\n" +
            "                \"0.001\": \"3.686\",\n" +
            "                \"0.0005\": \"4.015\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"17\",\n" +
            "                \"0.1\": \"1.333\",\n" +
            "                \"0.05\": \"1.74\",\n" +
            "                \"0.025\": \"2.11\",\n" +
            "                \"0.01\": \"2.567\",\n" +
            "                \"0.005\": \"2.898\",\n" +
            "                \"0.001\": \"3.646\",\n" +
            "                \"0.0005\": \"3.965\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"18\",\n" +
            "                \"0.1\": \"1.33\",\n" +
            "                \"0.05\": \"1.734\",\n" +
            "                \"0.025\": \"2.101\",\n" +
            "                \"0.01\": \"2.552\",\n" +
            "                \"0.005\": \"2.878\",\n" +
            "                \"0.001\": \"3.61\",\n" +
            "                \"0.0005\": \"3.922\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"19\",\n" +
            "                \"0.1\": \"1.328\",\n" +
            "                \"0.05\": \"1.729\",\n" +
            "                \"0.025\": \"2.093\",\n" +
            "                \"0.01\": \"2.539\",\n" +
            "                \"0.005\": \"2.861\",\n" +
            "                \"0.001\": \"3.579\",\n" +
            "                \"0.0005\": \"3.883\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"20\",\n" +
            "                \"0.1\": \"1.325\",\n" +
            "                \"0.05\": \"1.725\",\n" +
            "                \"0.025\": \"2.086\",\n" +
            "                \"0.01\": \"2.528\",\n" +
            "                \"0.005\": \"2.845\",\n" +
            "                \"0.001\": \"3.552\",\n" +
            "                \"0.0005\": \"3.85\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"21\",\n" +
            "                \"0.1\": \"1.323\",\n" +
            "                \"0.05\": \"1.721\",\n" +
            "                \"0.025\": \"2.08\",\n" +
            "                \"0.01\": \"2.518\",\n" +
            "                \"0.005\": \"2.831\",\n" +
            "                \"0.001\": \"3.527\",\n" +
            "                \"0.0005\": \"3.819\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"22\",\n" +
            "                \"0.1\": \"1.321\",\n" +
            "                \"0.05\": \"1.717\",\n" +
            "                \"0.025\": \"2.074\",\n" +
            "                \"0.01\": \"2.508\",\n" +
            "                \"0.005\": \"2.819\",\n" +
            "                \"0.001\": \"3.505\",\n" +
            "                \"0.0005\": \"3.792\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"23\",\n" +
            "                \"0.1\": \"1.319\",\n" +
            "                \"0.05\": \"1.714\",\n" +
            "                \"0.025\": \"2.069\",\n" +
            "                \"0.01\": \"2.5\",\n" +
            "                \"0.005\": \"2.807\",\n" +
            "                \"0.001\": \"3.485\",\n" +
            "                \"0.0005\": \"3.767\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"24\",\n" +
            "                \"0.1\": \"1.318\",\n" +
            "                \"0.05\": \"1.711\",\n" +
            "                \"0.025\": \"2.064\",\n" +
            "                \"0.01\": \"2.492\",\n" +
            "                \"0.005\": \"2.797\",\n" +
            "                \"0.001\": \"3.467\",\n" +
            "                \"0.0005\": \"3.745\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"25\",\n" +
            "                \"0.1\": \"1.316\",\n" +
            "                \"0.05\": \"1.708\",\n" +
            "                \"0.025\": \"2.06\",\n" +
            "                \"0.01\": \"2.485\",\n" +
            "                \"0.005\": \"2.787\",\n" +
            "                \"0.001\": \"3.45\",\n" +
            "                \"0.0005\": \"3.725\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"26\",\n" +
            "                \"0.1\": \"1.315\",\n" +
            "                \"0.05\": \"1.706\",\n" +
            "                \"0.025\": \"2.056\",\n" +
            "                \"0.01\": \"2.479\",\n" +
            "                \"0.005\": \"2.779\",\n" +
            "                \"0.001\": \"3.435\",\n" +
            "                \"0.0005\": \"3.707\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"27\",\n" +
            "                \"0.1\": \"1.314\",\n" +
            "                \"0.05\": \"1.703\",\n" +
            "                \"0.025\": \"2.052\",\n" +
            "                \"0.01\": \"2.473\",\n" +
            "                \"0.005\": \"2.771\",\n" +
            "                \"0.001\": \"3.421\",\n" +
            "                \"0.0005\": \"3.69\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"28\",\n" +
            "                \"0.1\": \"1.313\",\n" +
            "                \"0.05\": \"1.701\",\n" +
            "                \"0.025\": \"2.048\",\n" +
            "                \"0.01\": \"2.467\",\n" +
            "                \"0.005\": \"2.763\",\n" +
            "                \"0.001\": \"3.408\",\n" +
            "                \"0.0005\": \"3.674\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"29\",\n" +
            "                \"0.1\": \"1.311\",\n" +
            "                \"0.05\": \"1.699\",\n" +
            "                \"0.025\": \"2.045\",\n" +
            "                \"0.01\": \"2.462\",\n" +
            "                \"0.005\": \"2.756\",\n" +
            "                \"0.001\": \"3.396\",\n" +
            "                \"0.0005\": \"3.659\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"30\",\n" +
            "                \"0.1\": \"1.31\",\n" +
            "                \"0.05\": \"1.697\",\n" +
            "                \"0.025\": \"2.042\",\n" +
            "                \"0.01\": \"2.457\",\n" +
            "                \"0.005\": \"2.75\",\n" +
            "                \"0.001\": \"3.385\",\n" +
            "                \"0.0005\": \"3.646\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"32\",\n" +
            "                \"0.1\": \"1.309\",\n" +
            "                \"0.05\": \"1.694\",\n" +
            "                \"0.025\": \"2.037\",\n" +
            "                \"0.01\": \"2.449\",\n" +
            "                \"0.005\": \"2.738\",\n" +
            "                \"0.001\": \"3.365\",\n" +
            "                \"0.0005\": \"3.622\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"34\",\n" +
            "                \"0.1\": \"1.307\",\n" +
            "                \"0.05\": \"1.691\",\n" +
            "                \"0.025\": \"2.032\",\n" +
            "                \"0.01\": \"2.441\",\n" +
            "                \"0.005\": \"2.728\",\n" +
            "                \"0.001\": \"3.348\",\n" +
            "                \"0.0005\": \"3.601\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"36\",\n" +
            "                \"0.1\": \"1.306\",\n" +
            "                \"0.05\": \"1.688\",\n" +
            "                \"0.025\": \"2.028\",\n" +
            "                \"0.01\": \"2.434\",\n" +
            "                \"0.005\": \"2.719\",\n" +
            "                \"0.001\": \"3.333\",\n" +
            "                \"0.0005\": \"3.582\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"38\",\n" +
            "                \"0.1\": \"1.304\",\n" +
            "                \"0.05\": \"1.686\",\n" +
            "                \"0.025\": \"2.024\",\n" +
            "                \"0.01\": \"2.429\",\n" +
            "                \"0.005\": \"2.712\",\n" +
            "                \"0.001\": \"3.319\",\n" +
            "                \"0.0005\": \"3.566\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"40\",\n" +
            "                \"0.1\": \"1.303\",\n" +
            "                \"0.05\": \"1.684\",\n" +
            "                \"0.025\": \"2.021\",\n" +
            "                \"0.01\": \"2.423\",\n" +
            "                \"0.005\": \"2.704\",\n" +
            "                \"0.001\": \"3.307\",\n" +
            "                \"0.0005\": \"3.551\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"50\",\n" +
            "                \"0.1\": \"1.299\",\n" +
            "                \"0.05\": \"1.676\",\n" +
            "                \"0.025\": \"2.009\",\n" +
            "                \"0.01\": \"2.403\",\n" +
            "                \"0.005\": \"2.678\",\n" +
            "                \"0.001\": \"3.262\",\n" +
            "                \"0.0005\": \"3.496\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"60\",\n" +
            "                \"0.1\": \"1.296\",\n" +
            "                \"0.05\": \"1.671\",\n" +
            "                \"0.025\": \"2\",\n" +
            "                \"0.01\": \"2.39\",\n" +
            "                \"0.005\": \"2.66\",\n" +
            "                \"0.001\": \"3.232\",\n" +
            "                \"0.0005\": \"3.46\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"120\",\n" +
            "                \"0.1\": \"1.289\",\n" +
            "                \"0.05\": \"1.658\",\n" +
            "                \"0.025\": \"1.98\",\n" +
            "                \"0.01\": \"2.358\",\n" +
            "                \"0.005\": \"2.617\",\n" +
            "                \"0.001\": \"3.16\",\n" +
            "                \"0.0005\": \"3.373\"\n" +
            "            },\n" +
            "            {\n" +
            "                \"v\": \"infinity\",\n" +
            "                \"0.1\": \"1.282\",\n" +
            "                \"0.05\": \"1.645\",\n" +
            "                \"0.025\": \"1.96\",\n" +
            "                \"0.01\": \"2.326\",\n" +
            "                \"0.005\": \"2.576\",\n" +
            "                \"0.001\": \"3.09\",\n" +
            "                \"0.0005\": \"3.291\"\n" +
            "            }\n" +
            "        ]\n" +
            "    }";



    ArrayList<String> vArr = new ArrayList<>();
    ArrayList<String> alpArr = new ArrayList<>(Arrays.asList("0.1", "0.05", "0.025", "0.01", "0.005", "0.001", "0.0005"));
    ArrayList<String> tArr = new ArrayList<>();

    float[][] arr= new float[125][7];

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tdistri);

        try {

            int count=0;

            JSONObject jsonObject = new JSONObject(jsonStr);
            JSONArray jsonArray = jsonObject.getJSONArray("Sheet1");



            for (int i=0; i<jsonArray.length(); ++i){
                vArr.add(jsonArray.getJSONObject(i).getString("v"));
            }

            for (int i=0; i<125; ++i){
                if (i==121){

                    for (int k =0; k<alpArr.size(); ++k){
                        arr[121][k]= Float.parseFloat(jsonArray.getJSONObject(count).getString(alpArr.get(k)));
                        tArr.add(jsonArray.getJSONObject(count).getString(alpArr.get(k)));
                        Log.i("Infinity", "Registered "+String.valueOf(k));
                    }
                    break;
                }

                if (vArr.contains(String.valueOf(i))){
                    for (int j=0; j<alpArr.size(); ++j) {
                        arr[i][j] = Float.parseFloat(jsonArray.getJSONObject(count).getString(alpArr.get(j)));
                        tArr.add(jsonArray.getJSONObject(count).getString(alpArr.get(j)));
                    }
                        ++count;

                }
            }



        } catch (JSONException e) {
           // e.printStackTrace();
        }


        // setting auto complete for direct relation

        AutoCompleteTextView vauto = findViewById(R.id.vAuto);
        AutoCompleteTextView alpauto = findViewById(R.id.alpAuto);

        ArrayAdapter<String> vAdapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, vArr);
        ArrayAdapter<String> alpAdapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, alpArr);

        vauto.setAdapter(vAdapter);
        vauto.setThreshold(1);

        alpauto.setAdapter(alpAdapter);
        alpauto.setThreshold(2);

        //setting auto complete for inverse relation

        AutoCompleteTextView tauto = findViewById(R.id.tAuto);
        ArrayAdapter<String> tAdapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, tArr);
        tauto.setAdapter(tAdapter);
        tauto.setThreshold(2);
    }


    public void  direct(View view){

        Button tDirect = findViewById(R.id.directButton);

        InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(tDirect.getWindowToken(), InputMethodManager.RESULT_UNCHANGED_SHOWN);

        AutoCompleteTextView vauto = findViewById(R.id.vAuto);
        AutoCompleteTextView alpauto = findViewById(R.id.alpAuto);

        String vStr = vauto.getText().toString();
        String alpStr = alpauto.getText().toString();

        for (int i=0; i<alpArr.size(); ++i){
            if (alpArr.get(i).equals(alpStr)){
                TextView ansText = findViewById(R.id.anstText);
                if(vStr.equals("infinity")) {
                    vStr = "121";

                }
                ansText.setText("t= "+String.valueOf(arr[Integer.parseInt(vStr)][i]));

                break;
            }
        }


    }

    public void inverse(View view){
        TextView ansText = findViewById(R.id.anstText);

        Button tInverse = findViewById(R.id.button6);

        InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(tInverse.getWindowToken(), InputMethodManager.RESULT_UNCHANGED_SHOWN);

        try {
            AutoCompleteTextView tauto = findViewById(R.id.tAuto);
            String tStr = tauto.getText().toString();

            int pos = tArr.indexOf(tStr);
            int row = pos / alpArr.size();
            int col = pos % alpArr.size();

            String vVal = vArr.get(row);
            if (row == vArr.size()) {
                vVal = "infinity";
            }


            Log.i("Inverse", "Entered");
            ansText.setText("v= " + vVal + "\nα= " + alpArr.get(col));
        } catch (Exception e){
            ansText.setText("N/A :(");
        }





    }


}